name: CI/CD using github actions & ipo-alarm-app

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # JDK Setting
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle caching 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # yml 생성
      - name: make application.yml
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p ./src/main/resources 
          echo "${{ secrets.YML }}" > ./src/main/resources/application.yml

      - name: make backend .env file
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.ENV }}" > ./.env

      - name: make front .env file
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.FRONT_ENV }}" > frontend/.env

      # docker build
      - name: Docker build & push to repo
        if: github.ref == 'refs/heads/main'
        run: |
      - name: Docker build & push to repo
        if: github.ref == 'refs/heads/main'
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo ${{secrets.DOCKER_USERNAME}}
          pwd
          ls -al
          sudo docker build -t  ${{ secrets.DOCKER_IMAGE }} "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}"
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
         

      # deploy
      - name: deploy to server
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: github.ref == 'refs/heads/main'
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.USERNAME_GCP }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          envs: GITHUB_SHA
          scripts: |
            sudo docker ps
            sudo docker stop ipo-alarm-app
            sudo docker rm ipo-alarm-app
            sudo docker images
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
            sudo docker run -d -it -p 8080:8080 --name ipo-alarm-app --env-file ./.env ${{ secrets.DOCKER_IMAGE }}
            sudo docker image prune -f
